-- TiDB Vector Search Demo Data for Apollo Nexus
-- Part of TiDB AgentX Hackathon submission

-- Create database if not exists
CREATE DATABASE IF NOT EXISTS test;
USE test;

-- Drop existing tables to start fresh
DROP TABLE IF EXISTS fault_pattern_vectors;
DROP TABLE IF EXISTS model_inference_vectors;
DROP TABLE IF EXISTS sensor_embeddings;
DROP TABLE IF EXISTS solution_vectors;

-- Create fault pattern vectors table
CREATE TABLE fault_pattern_vectors (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    pattern_name VARCHAR(255) NOT NULL,
    pattern_vector VECTOR(1536) NOT NULL,
    specialist_model VARCHAR(50),
    severity INT,
    cost_impact DECIMAL(10,2),
    energy_impact DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VECTOR INDEX idx_pattern_vector ((VEC_COSINE_DISTANCE(pattern_vector)))
);

-- Create model inference vectors table
CREATE TABLE model_inference_vectors (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    equipment_id INT,
    model_name VARCHAR(50),
    inference_vector VECTOR(1536) NOT NULL,
    fault_detected BOOLEAN,
    confidence DECIMAL(5,4),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VECTOR INDEX idx_inference_vector ((VEC_COSINE_DISTANCE(inference_vector)))
);

-- Create sensor embeddings table
CREATE TABLE sensor_embeddings (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    equipment_id INT NOT NULL,
    sensor_data JSON,
    embedding_vector VECTOR(1536) NOT NULL,
    anomaly_score DECIMAL(5,4),
    timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VECTOR INDEX idx_embedding_vector ((VEC_COSINE_DISTANCE(embedding_vector))),
    INDEX idx_equipment_timestamp (equipment_id, timestamp)
);

-- Create solution knowledge base
CREATE TABLE solution_vectors (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    fault_type VARCHAR(100),
    solution_text TEXT,
    solution_vector VECTOR(256) NOT NULL,
    success_rate DECIMAL(5,2),
    avg_repair_time INT,
    parts_required JSON,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    VECTOR INDEX idx_solution_vector ((VEC_COSINE_DISTANCE(solution_vector)))
);

-- Helper function to generate random vector (MySQL doesn't support this directly, so we'll use a workaround)
-- Note: In production, vectors would be generated by the application

-- Insert demo fault patterns (simplified vectors for demo)
-- Note: Using simplified repeating values for demo purposes
INSERT INTO fault_pattern_vectors (pattern_name, pattern_vector, specialist_model, severity, cost_impact, energy_impact) VALUES
('Low Refrigerant Pressure', '[0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,
('Dirty Air Filter', CAST('[' || REPEAT('0.2,', 1535) || '0.2]' AS VECTOR(1536)), 'ZEPHYRUS', 2, 150.00, 15.00),
('Compressor Failure', CAST('[' || REPEAT('0.3,', 1535) || '0.3]' AS VECTOR(1536)), 'VULCAN', 5, 3500.00, 40.00),
('Thermostat Malfunction', CAST('[' || REPEAT('0.15,', 1535) || '0.15]' AS VECTOR(1536)), 'AQUILO', 2, 250.00, 10.00),
('Refrigerant Leak', CAST('[' || REPEAT('0.25,', 1535) || '0.25]' AS VECTOR(1536)), 'BOREAS', 4, 800.00, 30.00),
('Fan Motor Failure', CAST('[' || REPEAT('0.35,', 1535) || '0.35]' AS VECTOR(1536)), 'ZEPHYRUS', 4, 1200.00, 35.00),
('Clogged Condensate Drain', CAST('[' || REPEAT('0.12,', 1535) || '0.12]' AS VECTOR(1536)), 'NAIAD', 2, 200.00, 5.00),
('Electrical Short Circuit', CAST('[' || REPEAT('0.4,', 1535) || '0.4]' AS VECTOR(1536)), 'VULCAN', 5, 2000.00, 45.00),
('Frozen Evaporator Coil', CAST('[' || REPEAT('0.22,', 1535) || '0.22]' AS VECTOR(1536)), 'AQUILO', 3, 600.00, 20.00),
('Belt Slippage', CAST('[' || REPEAT('0.18,', 1535) || '0.18]' AS VECTOR(1536)), 'ZEPHYRUS', 2, 180.00, 12.00);

-- Insert demo solutions
INSERT INTO solution_vectors (fault_type, solution_text, solution_vector, success_rate, avg_repair_time, parts_required) VALUES
('Low Refrigerant', 'Add refrigerant to manufacturer specified levels', CAST('[' || REPEAT('0.1,', 255) || '0.1]' AS VECTOR(256)), 95.00, 2, '["R410A Refrigerant", "Gauge Set"]'),
('Dirty Filter', 'Replace air filter with MERV 13 rated filter', CAST('[' || REPEAT('0.2,', 255) || '0.2]' AS VECTOR(256)), 98.00, 1, '["MERV 13 Filter"]'),
('Compressor Failure', 'Replace compressor unit with OEM part', CAST('[' || REPEAT('0.3,', 255) || '0.3]' AS VECTOR(256)), 85.00, 8, '["Compressor Unit", "Refrigerant", "Mounting Hardware"]'),
('Thermostat Issue', 'Recalibrate or replace thermostat', CAST('[' || REPEAT('0.15,', 255) || '0.15]' AS VECTOR(256)), 92.00, 2, '["Digital Thermostat", "Wiring"]'),
('Refrigerant Leak', 'Locate and seal leak, then recharge system', CAST('[' || REPEAT('0.25,', 255) || '0.25]' AS VECTOR(256)), 88.00, 4, '["Leak Sealant", "R410A Refrigerant", "UV Dye"]'),
('Fan Motor', 'Replace fan motor and check capacitor', CAST('[' || REPEAT('0.35,', 255) || '0.35]' AS VECTOR(256)), 90.00, 3, '["Fan Motor", "Capacitor", "Belt"]'),
('Clogged Drain', 'Clear condensate drain line with compressed air', CAST('[' || REPEAT('0.12,', 255) || '0.12]' AS VECTOR(256)), 96.00, 1, '["Drain Cleaner", "Compressed Air"]'),
('Electrical Fault', 'Repair electrical connections and replace damaged components', CAST('[' || REPEAT('0.4,', 255) || '0.4]' AS VECTOR(256)), 82.00, 5, '["Electrical Components", "Wire", "Breaker"]'),
('Frozen Coil', 'Defrost coil and check airflow restrictions', CAST('[' || REPEAT('0.22,', 255) || '0.22]' AS VECTOR(256)), 94.00, 3, '["Defrost Solution", "Filter"]'),
('Belt Issue', 'Adjust belt tension or replace if worn', CAST('[' || REPEAT('0.18,', 255) || '0.18]' AS VECTOR(256)), 97.00, 1, '["Drive Belt", "Tensioner"]');

-- Insert demo sensor embeddings (last 7 days of data)
INSERT INTO sensor_embeddings (equipment_id, sensor_data, embedding_vector, anomaly_score) VALUES
(1, '{"temperature": 72.5, "humidity": 45.2, "pressure": 120.3}', CAST('[' || REPEAT('0.05,', 1535) || '0.05]' AS VECTOR(1536)), 0.12),
(1, '{"temperature": 73.1, "humidity": 44.8, "pressure": 119.8}', CAST('[' || REPEAT('0.06,', 1535) || '0.06]' AS VECTOR(1536)), 0.15),
(1, '{"temperature": 74.2, "humidity": 46.1, "pressure": 121.2}', CAST('[' || REPEAT('0.07,', 1535) || '0.07]' AS VECTOR(1536)), 0.18),
(2, '{"temperature": 68.3, "humidity": 52.4, "pressure": 115.6}', CAST('[' || REPEAT('0.08,', 1535) || '0.08]' AS VECTOR(1536)), 0.25),
(2, '{"temperature": 69.1, "humidity": 51.8, "pressure": 116.2}', CAST('[' || REPEAT('0.09,', 1535) || '0.09]' AS VECTOR(1536)), 0.22),
(3, '{"temperature": 75.8, "humidity": 38.2, "pressure": 122.5}', CAST('[' || REPEAT('0.11,', 1535) || '0.11]' AS VECTOR(1536)), 0.35),
(3, '{"temperature": 76.2, "humidity": 37.9, "pressure": 123.1}', CAST('[' || REPEAT('0.13,', 1535) || '0.13]' AS VECTOR(1536)), 0.38),
(4, '{"temperature": 71.5, "humidity": 48.6, "pressure": 118.9}', CAST('[' || REPEAT('0.14,', 1535) || '0.14]' AS VECTOR(1536)), 0.10),
(4, '{"temperature": 70.8, "humidity": 49.2, "pressure": 117.8}', CAST('[' || REPEAT('0.16,', 1535) || '0.16]' AS VECTOR(1536)), 0.08),
(5, '{"temperature": 77.3, "humidity": 42.1, "pressure": 124.7}', CAST('[' || REPEAT('0.17,', 1535) || '0.17]' AS VECTOR(1536)), 0.42);

-- Insert demo model inferences
INSERT INTO model_inference_vectors (equipment_id, model_name, inference_vector, fault_detected, confidence) VALUES
(1, 'APOLLO', CAST('[' || REPEAT('0.21,', 1535) || '0.21]' AS VECTOR(1536)), false, 0.8234),
(1, 'AQUILO', CAST('[' || REPEAT('0.23,', 1535) || '0.23]' AS VECTOR(1536)), false, 0.7856),
(1, 'BOREAS', CAST('[' || REPEAT('0.24,', 1535) || '0.24]' AS VECTOR(1536)), true, 0.8923),
(2, 'APOLLO', CAST('[' || REPEAT('0.26,', 1535) || '0.26]' AS VECTOR(1536)), true, 0.9145),
(2, 'VULCAN', CAST('[' || REPEAT('0.27,', 1535) || '0.27]' AS VECTOR(1536)), false, 0.6234),
(2, 'ZEPHYRUS', CAST('[' || REPEAT('0.28,', 1535) || '0.28]' AS VECTOR(1536)), true, 0.8567),
(3, 'APOLLO', CAST('[' || REPEAT('0.29,', 1535) || '0.29]' AS VECTOR(1536)), false, 0.7234),
(3, 'NAIAD', CAST('[' || REPEAT('0.31,', 1535) || '0.31]' AS VECTOR(1536)), false, 0.6789),
(4, 'COLOSSUS', CAST('[' || REPEAT('0.32,', 1535) || '0.32]' AS VECTOR(1536)), false, 0.7123),
(5, 'GAIA', CAST('[' || REPEAT('0.33,', 1535) || '0.33]' AS VECTOR(1536)), false, 0.7456);

-- Display counts for verification
SELECT 'Fault Patterns' as Table_Name, COUNT(*) as Record_Count FROM fault_pattern_vectors
UNION ALL
SELECT 'Solutions', COUNT(*) FROM solution_vectors
UNION ALL
SELECT 'Sensor Embeddings', COUNT(*) FROM sensor_embeddings
UNION ALL
SELECT 'Model Inferences', COUNT(*) FROM model_inference_vectors;